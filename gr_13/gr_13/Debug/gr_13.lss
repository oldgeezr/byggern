
gr_13.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000fe  00800100  00000b64  00000bf8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b64  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  008001fe  008001fe  00000cf6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000cf6  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000a0  00000000  00000000  00000d52  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000693  00000000  00000000  00000df2  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000044d  00000000  00000000  00001485  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000043c  00000000  00000000  000018d2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000160  00000000  00000000  00001d10  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002c0  00000000  00000000  00001e70  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002b1  00000000  00000000  00002130  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  000023e1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e4 e6       	ldi	r30, 0x64	; 100
  84:	fb e0       	ldi	r31, 0x0B	; 11
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	ae 3f       	cpi	r26, 0xFE	; 254
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	22 e0       	ldi	r18, 0x02	; 2
  94:	ae ef       	ldi	r26, 0xFE	; 254
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	aa 30       	cpi	r26, 0x0A	; 10
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 60 00 	call	0xc0	; 0xc0 <main>
  a6:	0c 94 b0 05 	jmp	0xb60	; 0xb60 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <ADC_read>:
#include "adc.h"

uint8_t ADC_read(ADC_channel ch)
{
	volatile char *adc = (char *) 0x1400;
	adc[1] = ch;
  ae:	80 93 01 14 	sts	0x1401, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  b2:	81 e4       	ldi	r24, 0x41	; 65
  b4:	8a 95       	dec	r24
  b6:	f1 f7       	brne	.-4      	; 0xb4 <ADC_read+0x6>
  b8:	00 c0       	rjmp	.+0      	; 0xba <ADC_read+0xc>
	_delay_us(40);
	
	return adc[0];
  ba:	80 91 00 14 	lds	r24, 0x1400
  be:	08 95       	ret

000000c0 <main>:
#include "uart.h"
#include "adc.h"

int main(void)
{
	usart_setup();
  c0:	0e 94 17 01 	call	0x22e	; 0x22e <usart_setup>
	SRAM_init();
  c4:	0e 94 8b 00 	call	0x116	; 0x116 <SRAM_init>
	
	char result;
	
	SRAM_test();
  c8:	0e 94 8f 00 	call	0x11e	; 0x11e <SRAM_test>
	for(;;) {
		result = ADC_read(JOY_X);
		printf("X: %d ", result);
  cc:	06 e0       	ldi	r16, 0x06	; 6
  ce:	11 e0       	ldi	r17, 0x01	; 1
		
		result = ADC_read(JOY_Y);
		printf(" , Y: %d \n", result);
  d0:	cd e0       	ldi	r28, 0x0D	; 13
  d2:	d1 e0       	ldi	r29, 0x01	; 1
	
	char result;
	
	SRAM_test();
	for(;;) {
		result = ADC_read(JOY_X);
  d4:	84 e0       	ldi	r24, 0x04	; 4
  d6:	0e 94 57 00 	call	0xae	; 0xae <ADC_read>
		printf("X: %d ", result);
  da:	1f 92       	push	r1
  dc:	8f 93       	push	r24
  de:	1f 93       	push	r17
  e0:	0f 93       	push	r16
  e2:	0e 94 76 01 	call	0x2ec	; 0x2ec <printf>
		
		result = ADC_read(JOY_Y);
  e6:	85 e0       	ldi	r24, 0x05	; 5
  e8:	0e 94 57 00 	call	0xae	; 0xae <ADC_read>
		printf(" , Y: %d \n", result);
  ec:	1f 92       	push	r1
  ee:	8f 93       	push	r24
  f0:	df 93       	push	r29
  f2:	cf 93       	push	r28
  f4:	0e 94 76 01 	call	0x2ec	; 0x2ec <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  f8:	8c ec       	ldi	r24, 0xCC	; 204
  fa:	94 e0       	ldi	r25, 0x04	; 4
  fc:	01 97       	sbiw	r24, 0x01	; 1
  fe:	f1 f7       	brne	.-4      	; 0xfc <main+0x3c>
 100:	00 c0       	rjmp	.+0      	; 0x102 <main+0x42>
 102:	00 00       	nop
 104:	8d b7       	in	r24, 0x3d	; 61
 106:	9e b7       	in	r25, 0x3e	; 62
 108:	08 96       	adiw	r24, 0x08	; 8
 10a:	0f b6       	in	r0, 0x3f	; 63
 10c:	f8 94       	cli
 10e:	9e bf       	out	0x3e, r25	; 62
 110:	0f be       	out	0x3f, r0	; 63
 112:	8d bf       	out	0x3d, r24	; 61
 114:	df cf       	rjmp	.-66     	; 0xd4 <main+0x14>

00000116 <SRAM_init>:

#include "sram.h"

void SRAM_init()
{
	MCUCR |= (1<<SRE);
 116:	85 b7       	in	r24, 0x35	; 53
 118:	80 68       	ori	r24, 0x80	; 128
 11a:	85 bf       	out	0x35, r24	; 53
 11c:	08 95       	ret

0000011e <SRAM_test>:
	volatile char *ext_ram = (char *) 0x1400;
	ext_ram[0] = 100;
}

void SRAM_test(void)
{
 11e:	cf 92       	push	r12
 120:	df 92       	push	r13
 122:	ef 92       	push	r14
 124:	ff 92       	push	r15
 126:	0f 93       	push	r16
 128:	1f 93       	push	r17
 12a:	cf 93       	push	r28
 12c:	df 93       	push	r29
	uint16_t i, werrors, rerrors;
	werrors = 0;
	rerrors = 0;
	unsigned char testvalue;

	printf("Starting SRAM test...\r\n");
 12e:	88 e1       	ldi	r24, 0x18	; 24
 130:	91 e0       	ldi	r25, 0x01	; 1
 132:	0e 94 8a 01 	call	0x314	; 0x314 <puts>
{
	// Start address for the SRAM
	volatile char *ext_ram = (char *) 0x1800;

	uint16_t i, werrors, rerrors;
	werrors = 0;
 136:	00 e0       	ldi	r16, 0x00	; 0
 138:	10 e0       	ldi	r17, 0x00	; 0
	rerrors = 0;
	unsigned char testvalue;

	printf("Starting SRAM test...\r\n");

	for (i = 0; i < 0x800; i++) {
 13a:	c0 e0       	ldi	r28, 0x00	; 0
 13c:	d0 e0       	ldi	r29, 0x00	; 0
		testvalue = ~(i % 256);
		ext_ram[i] = testvalue;
		if (ext_ram[i] != testvalue) {
			printf("SRAM error (write phase): ext_ram[%d] = %02X (should be %02X)\r\n", i, ext_ram[i], testvalue);
 13e:	0f 2e       	mov	r0, r31
 140:	ff e2       	ldi	r31, 0x2F	; 47
 142:	ef 2e       	mov	r14, r31
 144:	f1 e0       	ldi	r31, 0x01	; 1
 146:	ff 2e       	mov	r15, r31
 148:	f0 2d       	mov	r31, r0
 14a:	8c 2f       	mov	r24, r28
 14c:	80 95       	com	r24
 14e:	fe 01       	movw	r30, r28
 150:	f8 5e       	subi	r31, 0xE8	; 232

	printf("Starting SRAM test...\r\n");

	for (i = 0; i < 0x800; i++) {
		testvalue = ~(i % 256);
		ext_ram[i] = testvalue;
 152:	80 83       	st	Z, r24
		if (ext_ram[i] != testvalue) {
 154:	90 81       	ld	r25, Z
 156:	98 17       	cp	r25, r24
 158:	a9 f0       	breq	.+42     	; 0x184 <SRAM_test+0x66>
			printf("SRAM error (write phase): ext_ram[%d] = %02X (should be %02X)\r\n", i, ext_ram[i], testvalue);
 15a:	90 81       	ld	r25, Z
 15c:	1f 92       	push	r1
 15e:	8f 93       	push	r24
 160:	1f 92       	push	r1
 162:	9f 93       	push	r25
 164:	df 93       	push	r29
 166:	cf 93       	push	r28
 168:	ff 92       	push	r15
 16a:	ef 92       	push	r14
 16c:	0e 94 76 01 	call	0x2ec	; 0x2ec <printf>
			werrors++;
 170:	0f 5f       	subi	r16, 0xFF	; 255
 172:	1f 4f       	sbci	r17, 0xFF	; 255
 174:	8d b7       	in	r24, 0x3d	; 61
 176:	9e b7       	in	r25, 0x3e	; 62
 178:	08 96       	adiw	r24, 0x08	; 8
 17a:	0f b6       	in	r0, 0x3f	; 63
 17c:	f8 94       	cli
 17e:	9e bf       	out	0x3e, r25	; 62
 180:	0f be       	out	0x3f, r0	; 63
 182:	8d bf       	out	0x3d, r24	; 61
	rerrors = 0;
	unsigned char testvalue;

	printf("Starting SRAM test...\r\n");

	for (i = 0; i < 0x800; i++) {
 184:	21 96       	adiw	r28, 0x01	; 1
 186:	c1 15       	cp	r28, r1
 188:	98 e0       	ldi	r25, 0x08	; 8
 18a:	d9 07       	cpc	r29, r25
 18c:	f1 f6       	brne	.-68     	; 0x14a <SRAM_test+0x2c>
 18e:	e1 2c       	mov	r14, r1
 190:	f1 2c       	mov	r15, r1
 192:	c0 e0       	ldi	r28, 0x00	; 0
 194:	d0 e0       	ldi	r29, 0x00	; 0
	}

	for (i = 0; i < 0x800; i++) {
		testvalue = ~(i % 256);
		if (ext_ram[i] != testvalue) {
			printf("SRAM error (read phase): ext_ram[%d] = %02X (should be %02X)\r\n", i, ext_ram[i], testvalue);
 196:	0f 2e       	mov	r0, r31
 198:	ff e6       	ldi	r31, 0x6F	; 111
 19a:	cf 2e       	mov	r12, r31
 19c:	f1 e0       	ldi	r31, 0x01	; 1
 19e:	df 2e       	mov	r13, r31
 1a0:	f0 2d       	mov	r31, r0
 1a2:	8c 2f       	mov	r24, r28
 1a4:	80 95       	com	r24
 1a6:	fe 01       	movw	r30, r28
 1a8:	f8 5e       	subi	r31, 0xE8	; 232
		}
	}

	for (i = 0; i < 0x800; i++) {
		testvalue = ~(i % 256);
		if (ext_ram[i] != testvalue) {
 1aa:	90 81       	ld	r25, Z
 1ac:	89 17       	cp	r24, r25
 1ae:	b1 f0       	breq	.+44     	; 0x1dc <SRAM_test+0xbe>
			printf("SRAM error (read phase): ext_ram[%d] = %02X (should be %02X)\r\n", i, ext_ram[i], testvalue);
 1b0:	90 81       	ld	r25, Z
 1b2:	1f 92       	push	r1
 1b4:	8f 93       	push	r24
 1b6:	1f 92       	push	r1
 1b8:	9f 93       	push	r25
 1ba:	df 93       	push	r29
 1bc:	cf 93       	push	r28
 1be:	df 92       	push	r13
 1c0:	cf 92       	push	r12
 1c2:	0e 94 76 01 	call	0x2ec	; 0x2ec <printf>
			rerrors++;
 1c6:	8f ef       	ldi	r24, 0xFF	; 255
 1c8:	e8 1a       	sub	r14, r24
 1ca:	f8 0a       	sbc	r15, r24
 1cc:	8d b7       	in	r24, 0x3d	; 61
 1ce:	9e b7       	in	r25, 0x3e	; 62
 1d0:	08 96       	adiw	r24, 0x08	; 8
 1d2:	0f b6       	in	r0, 0x3f	; 63
 1d4:	f8 94       	cli
 1d6:	9e bf       	out	0x3e, r25	; 62
 1d8:	0f be       	out	0x3f, r0	; 63
 1da:	8d bf       	out	0x3d, r24	; 61
			printf("SRAM error (write phase): ext_ram[%d] = %02X (should be %02X)\r\n", i, ext_ram[i], testvalue);
			werrors++;
		}
	}

	for (i = 0; i < 0x800; i++) {
 1dc:	21 96       	adiw	r28, 0x01	; 1
 1de:	c1 15       	cp	r28, r1
 1e0:	98 e0       	ldi	r25, 0x08	; 8
 1e2:	d9 07       	cpc	r29, r25
 1e4:	f1 f6       	brne	.-68     	; 0x1a2 <SRAM_test+0x84>
			printf("SRAM error (read phase): ext_ram[%d] = %02X (should be %02X)\r\n", i, ext_ram[i], testvalue);
			rerrors++;
		}
	}

	printf("SRAM test completed with %d errors in write phase and %d errors in read phase\r\n", werrors, rerrors);
 1e6:	ff 92       	push	r15
 1e8:	ef 92       	push	r14
 1ea:	1f 93       	push	r17
 1ec:	0f 93       	push	r16
 1ee:	8e ea       	ldi	r24, 0xAE	; 174
 1f0:	91 e0       	ldi	r25, 0x01	; 1
 1f2:	9f 93       	push	r25
 1f4:	8f 93       	push	r24
 1f6:	0e 94 76 01 	call	0x2ec	; 0x2ec <printf>
 1fa:	0f 90       	pop	r0
 1fc:	0f 90       	pop	r0
 1fe:	0f 90       	pop	r0
 200:	0f 90       	pop	r0
 202:	0f 90       	pop	r0
 204:	0f 90       	pop	r0
}
 206:	df 91       	pop	r29
 208:	cf 91       	pop	r28
 20a:	1f 91       	pop	r17
 20c:	0f 91       	pop	r16
 20e:	ff 90       	pop	r15
 210:	ef 90       	pop	r14
 212:	df 90       	pop	r13
 214:	cf 90       	pop	r12
 216:	08 95       	ret

00000218 <usart_putchar>:
 218:	5d 9b       	sbis	0x0b, 5	; 11
 21a:	fe cf       	rjmp	.-4      	; 0x218 <usart_putchar>
 21c:	8c b9       	out	0x0c, r24	; 12
 21e:	80 e0       	ldi	r24, 0x00	; 0
 220:	90 e0       	ldi	r25, 0x00	; 0
 222:	08 95       	ret

00000224 <usart_getchar>:
 224:	5f 9b       	sbis	0x0b, 7	; 11
 226:	fe cf       	rjmp	.-4      	; 0x224 <usart_getchar>
 228:	8c b1       	in	r24, 0x0c	; 12
 22a:	90 e0       	ldi	r25, 0x00	; 0
 22c:	08 95       	ret

0000022e <usart_setup>:
 22e:	8a b1       	in	r24, 0x0a	; 10
 230:	88 61       	ori	r24, 0x18	; 24
 232:	8a b9       	out	0x0a, r24	; 10
 234:	80 b5       	in	r24, 0x20	; 32
 236:	86 60       	ori	r24, 0x06	; 6
 238:	80 bd       	out	0x20, r24	; 32
 23a:	10 bc       	out	0x20, r1	; 32
 23c:	8f e1       	ldi	r24, 0x1F	; 31
 23e:	89 b9       	out	0x09, r24	; 9
 240:	62 e1       	ldi	r22, 0x12	; 18
 242:	71 e0       	ldi	r23, 0x01	; 1
 244:	8c e0       	ldi	r24, 0x0C	; 12
 246:	91 e0       	ldi	r25, 0x01	; 1
 248:	0e 94 2b 01 	call	0x256	; 0x256 <fdevopen>
 24c:	90 93 ff 01 	sts	0x01FF, r25
 250:	80 93 fe 01 	sts	0x01FE, r24
 254:	08 95       	ret

00000256 <fdevopen>:
 256:	0f 93       	push	r16
 258:	1f 93       	push	r17
 25a:	cf 93       	push	r28
 25c:	df 93       	push	r29
 25e:	ec 01       	movw	r28, r24
 260:	8b 01       	movw	r16, r22
 262:	00 97       	sbiw	r24, 0x00	; 0
 264:	31 f4       	brne	.+12     	; 0x272 <fdevopen+0x1c>
 266:	61 15       	cp	r22, r1
 268:	71 05       	cpc	r23, r1
 26a:	19 f4       	brne	.+6      	; 0x272 <fdevopen+0x1c>
 26c:	80 e0       	ldi	r24, 0x00	; 0
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	38 c0       	rjmp	.+112    	; 0x2e2 <fdevopen+0x8c>
 272:	6e e0       	ldi	r22, 0x0E	; 14
 274:	70 e0       	ldi	r23, 0x00	; 0
 276:	81 e0       	ldi	r24, 0x01	; 1
 278:	90 e0       	ldi	r25, 0x00	; 0
 27a:	0e 94 89 03 	call	0x712	; 0x712 <calloc>
 27e:	fc 01       	movw	r30, r24
 280:	00 97       	sbiw	r24, 0x00	; 0
 282:	a1 f3       	breq	.-24     	; 0x26c <fdevopen+0x16>
 284:	80 e8       	ldi	r24, 0x80	; 128
 286:	83 83       	std	Z+3, r24	; 0x03
 288:	01 15       	cp	r16, r1
 28a:	11 05       	cpc	r17, r1
 28c:	71 f0       	breq	.+28     	; 0x2aa <fdevopen+0x54>
 28e:	13 87       	std	Z+11, r17	; 0x0b
 290:	02 87       	std	Z+10, r16	; 0x0a
 292:	81 e8       	ldi	r24, 0x81	; 129
 294:	83 83       	std	Z+3, r24	; 0x03
 296:	80 91 00 02 	lds	r24, 0x0200
 29a:	90 91 01 02 	lds	r25, 0x0201
 29e:	89 2b       	or	r24, r25
 2a0:	21 f4       	brne	.+8      	; 0x2aa <fdevopen+0x54>
 2a2:	f0 93 01 02 	sts	0x0201, r31
 2a6:	e0 93 00 02 	sts	0x0200, r30
 2aa:	20 97       	sbiw	r28, 0x00	; 0
 2ac:	c9 f0       	breq	.+50     	; 0x2e0 <fdevopen+0x8a>
 2ae:	d1 87       	std	Z+9, r29	; 0x09
 2b0:	c0 87       	std	Z+8, r28	; 0x08
 2b2:	83 81       	ldd	r24, Z+3	; 0x03
 2b4:	82 60       	ori	r24, 0x02	; 2
 2b6:	83 83       	std	Z+3, r24	; 0x03
 2b8:	80 91 02 02 	lds	r24, 0x0202
 2bc:	90 91 03 02 	lds	r25, 0x0203
 2c0:	89 2b       	or	r24, r25
 2c2:	71 f4       	brne	.+28     	; 0x2e0 <fdevopen+0x8a>
 2c4:	f0 93 03 02 	sts	0x0203, r31
 2c8:	e0 93 02 02 	sts	0x0202, r30
 2cc:	80 91 04 02 	lds	r24, 0x0204
 2d0:	90 91 05 02 	lds	r25, 0x0205
 2d4:	89 2b       	or	r24, r25
 2d6:	21 f4       	brne	.+8      	; 0x2e0 <fdevopen+0x8a>
 2d8:	f0 93 05 02 	sts	0x0205, r31
 2dc:	e0 93 04 02 	sts	0x0204, r30
 2e0:	cf 01       	movw	r24, r30
 2e2:	df 91       	pop	r29
 2e4:	cf 91       	pop	r28
 2e6:	1f 91       	pop	r17
 2e8:	0f 91       	pop	r16
 2ea:	08 95       	ret

000002ec <printf>:
 2ec:	a0 e0       	ldi	r26, 0x00	; 0
 2ee:	b0 e0       	ldi	r27, 0x00	; 0
 2f0:	ec e7       	ldi	r30, 0x7C	; 124
 2f2:	f1 e0       	ldi	r31, 0x01	; 1
 2f4:	0c 94 89 05 	jmp	0xb12	; 0xb12 <__prologue_saves__+0x20>
 2f8:	fe 01       	movw	r30, r28
 2fa:	35 96       	adiw	r30, 0x05	; 5
 2fc:	61 91       	ld	r22, Z+
 2fe:	71 91       	ld	r23, Z+
 300:	af 01       	movw	r20, r30
 302:	80 91 02 02 	lds	r24, 0x0202
 306:	90 91 03 02 	lds	r25, 0x0203
 30a:	0e 94 b7 01 	call	0x36e	; 0x36e <vfprintf>
 30e:	e2 e0       	ldi	r30, 0x02	; 2
 310:	0c 94 a5 05 	jmp	0xb4a	; 0xb4a <__epilogue_restores__+0x20>

00000314 <puts>:
 314:	0f 93       	push	r16
 316:	1f 93       	push	r17
 318:	cf 93       	push	r28
 31a:	df 93       	push	r29
 31c:	e0 91 02 02 	lds	r30, 0x0202
 320:	f0 91 03 02 	lds	r31, 0x0203
 324:	23 81       	ldd	r18, Z+3	; 0x03
 326:	21 ff       	sbrs	r18, 1
 328:	1b c0       	rjmp	.+54     	; 0x360 <puts+0x4c>
 32a:	ec 01       	movw	r28, r24
 32c:	00 e0       	ldi	r16, 0x00	; 0
 32e:	10 e0       	ldi	r17, 0x00	; 0
 330:	89 91       	ld	r24, Y+
 332:	60 91 02 02 	lds	r22, 0x0202
 336:	70 91 03 02 	lds	r23, 0x0203
 33a:	db 01       	movw	r26, r22
 33c:	18 96       	adiw	r26, 0x08	; 8
 33e:	ed 91       	ld	r30, X+
 340:	fc 91       	ld	r31, X
 342:	19 97       	sbiw	r26, 0x09	; 9
 344:	88 23       	and	r24, r24
 346:	31 f0       	breq	.+12     	; 0x354 <puts+0x40>
 348:	09 95       	icall
 34a:	89 2b       	or	r24, r25
 34c:	89 f3       	breq	.-30     	; 0x330 <puts+0x1c>
 34e:	0f ef       	ldi	r16, 0xFF	; 255
 350:	1f ef       	ldi	r17, 0xFF	; 255
 352:	ee cf       	rjmp	.-36     	; 0x330 <puts+0x1c>
 354:	8a e0       	ldi	r24, 0x0A	; 10
 356:	09 95       	icall
 358:	89 2b       	or	r24, r25
 35a:	11 f4       	brne	.+4      	; 0x360 <puts+0x4c>
 35c:	c8 01       	movw	r24, r16
 35e:	02 c0       	rjmp	.+4      	; 0x364 <puts+0x50>
 360:	8f ef       	ldi	r24, 0xFF	; 255
 362:	9f ef       	ldi	r25, 0xFF	; 255
 364:	df 91       	pop	r29
 366:	cf 91       	pop	r28
 368:	1f 91       	pop	r17
 36a:	0f 91       	pop	r16
 36c:	08 95       	ret

0000036e <vfprintf>:
 36e:	ac e0       	ldi	r26, 0x0C	; 12
 370:	b0 e0       	ldi	r27, 0x00	; 0
 372:	ed eb       	ldi	r30, 0xBD	; 189
 374:	f1 e0       	ldi	r31, 0x01	; 1
 376:	0c 94 79 05 	jmp	0xaf2	; 0xaf2 <__prologue_saves__>
 37a:	7c 01       	movw	r14, r24
 37c:	6b 01       	movw	r12, r22
 37e:	8a 01       	movw	r16, r20
 380:	fc 01       	movw	r30, r24
 382:	17 82       	std	Z+7, r1	; 0x07
 384:	16 82       	std	Z+6, r1	; 0x06
 386:	83 81       	ldd	r24, Z+3	; 0x03
 388:	81 ff       	sbrs	r24, 1
 38a:	bd c1       	rjmp	.+890    	; 0x706 <__stack+0x207>
 38c:	ce 01       	movw	r24, r28
 38e:	01 96       	adiw	r24, 0x01	; 1
 390:	4c 01       	movw	r8, r24
 392:	f7 01       	movw	r30, r14
 394:	93 81       	ldd	r25, Z+3	; 0x03
 396:	f6 01       	movw	r30, r12
 398:	93 fd       	sbrc	r25, 3
 39a:	85 91       	lpm	r24, Z+
 39c:	93 ff       	sbrs	r25, 3
 39e:	81 91       	ld	r24, Z+
 3a0:	6f 01       	movw	r12, r30
 3a2:	88 23       	and	r24, r24
 3a4:	09 f4       	brne	.+2      	; 0x3a8 <vfprintf+0x3a>
 3a6:	ab c1       	rjmp	.+854    	; 0x6fe <__stack+0x1ff>
 3a8:	85 32       	cpi	r24, 0x25	; 37
 3aa:	39 f4       	brne	.+14     	; 0x3ba <vfprintf+0x4c>
 3ac:	93 fd       	sbrc	r25, 3
 3ae:	85 91       	lpm	r24, Z+
 3b0:	93 ff       	sbrs	r25, 3
 3b2:	81 91       	ld	r24, Z+
 3b4:	6f 01       	movw	r12, r30
 3b6:	85 32       	cpi	r24, 0x25	; 37
 3b8:	29 f4       	brne	.+10     	; 0x3c4 <vfprintf+0x56>
 3ba:	b7 01       	movw	r22, r14
 3bc:	90 e0       	ldi	r25, 0x00	; 0
 3be:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <fputc>
 3c2:	e7 cf       	rjmp	.-50     	; 0x392 <vfprintf+0x24>
 3c4:	51 2c       	mov	r5, r1
 3c6:	31 2c       	mov	r3, r1
 3c8:	20 e0       	ldi	r18, 0x00	; 0
 3ca:	20 32       	cpi	r18, 0x20	; 32
 3cc:	a0 f4       	brcc	.+40     	; 0x3f6 <vfprintf+0x88>
 3ce:	8b 32       	cpi	r24, 0x2B	; 43
 3d0:	69 f0       	breq	.+26     	; 0x3ec <vfprintf+0x7e>
 3d2:	30 f4       	brcc	.+12     	; 0x3e0 <vfprintf+0x72>
 3d4:	80 32       	cpi	r24, 0x20	; 32
 3d6:	59 f0       	breq	.+22     	; 0x3ee <vfprintf+0x80>
 3d8:	83 32       	cpi	r24, 0x23	; 35
 3da:	69 f4       	brne	.+26     	; 0x3f6 <vfprintf+0x88>
 3dc:	20 61       	ori	r18, 0x10	; 16
 3de:	2c c0       	rjmp	.+88     	; 0x438 <vfprintf+0xca>
 3e0:	8d 32       	cpi	r24, 0x2D	; 45
 3e2:	39 f0       	breq	.+14     	; 0x3f2 <vfprintf+0x84>
 3e4:	80 33       	cpi	r24, 0x30	; 48
 3e6:	39 f4       	brne	.+14     	; 0x3f6 <vfprintf+0x88>
 3e8:	21 60       	ori	r18, 0x01	; 1
 3ea:	26 c0       	rjmp	.+76     	; 0x438 <vfprintf+0xca>
 3ec:	22 60       	ori	r18, 0x02	; 2
 3ee:	24 60       	ori	r18, 0x04	; 4
 3f0:	23 c0       	rjmp	.+70     	; 0x438 <vfprintf+0xca>
 3f2:	28 60       	ori	r18, 0x08	; 8
 3f4:	21 c0       	rjmp	.+66     	; 0x438 <vfprintf+0xca>
 3f6:	27 fd       	sbrc	r18, 7
 3f8:	27 c0       	rjmp	.+78     	; 0x448 <vfprintf+0xda>
 3fa:	30 ed       	ldi	r19, 0xD0	; 208
 3fc:	38 0f       	add	r19, r24
 3fe:	3a 30       	cpi	r19, 0x0A	; 10
 400:	78 f4       	brcc	.+30     	; 0x420 <vfprintf+0xb2>
 402:	26 ff       	sbrs	r18, 6
 404:	06 c0       	rjmp	.+12     	; 0x412 <vfprintf+0xa4>
 406:	fa e0       	ldi	r31, 0x0A	; 10
 408:	5f 9e       	mul	r5, r31
 40a:	30 0d       	add	r19, r0
 40c:	11 24       	eor	r1, r1
 40e:	53 2e       	mov	r5, r19
 410:	13 c0       	rjmp	.+38     	; 0x438 <vfprintf+0xca>
 412:	8a e0       	ldi	r24, 0x0A	; 10
 414:	38 9e       	mul	r3, r24
 416:	30 0d       	add	r19, r0
 418:	11 24       	eor	r1, r1
 41a:	33 2e       	mov	r3, r19
 41c:	20 62       	ori	r18, 0x20	; 32
 41e:	0c c0       	rjmp	.+24     	; 0x438 <vfprintf+0xca>
 420:	8e 32       	cpi	r24, 0x2E	; 46
 422:	21 f4       	brne	.+8      	; 0x42c <vfprintf+0xbe>
 424:	26 fd       	sbrc	r18, 6
 426:	6b c1       	rjmp	.+726    	; 0x6fe <__stack+0x1ff>
 428:	20 64       	ori	r18, 0x40	; 64
 42a:	06 c0       	rjmp	.+12     	; 0x438 <vfprintf+0xca>
 42c:	8c 36       	cpi	r24, 0x6C	; 108
 42e:	11 f4       	brne	.+4      	; 0x434 <vfprintf+0xc6>
 430:	20 68       	ori	r18, 0x80	; 128
 432:	02 c0       	rjmp	.+4      	; 0x438 <vfprintf+0xca>
 434:	88 36       	cpi	r24, 0x68	; 104
 436:	41 f4       	brne	.+16     	; 0x448 <vfprintf+0xda>
 438:	f6 01       	movw	r30, r12
 43a:	93 fd       	sbrc	r25, 3
 43c:	85 91       	lpm	r24, Z+
 43e:	93 ff       	sbrs	r25, 3
 440:	81 91       	ld	r24, Z+
 442:	6f 01       	movw	r12, r30
 444:	81 11       	cpse	r24, r1
 446:	c1 cf       	rjmp	.-126    	; 0x3ca <vfprintf+0x5c>
 448:	98 2f       	mov	r25, r24
 44a:	9f 7d       	andi	r25, 0xDF	; 223
 44c:	95 54       	subi	r25, 0x45	; 69
 44e:	93 30       	cpi	r25, 0x03	; 3
 450:	28 f4       	brcc	.+10     	; 0x45c <vfprintf+0xee>
 452:	0c 5f       	subi	r16, 0xFC	; 252
 454:	1f 4f       	sbci	r17, 0xFF	; 255
 456:	ff e3       	ldi	r31, 0x3F	; 63
 458:	f9 83       	std	Y+1, r31	; 0x01
 45a:	0d c0       	rjmp	.+26     	; 0x476 <vfprintf+0x108>
 45c:	83 36       	cpi	r24, 0x63	; 99
 45e:	31 f0       	breq	.+12     	; 0x46c <vfprintf+0xfe>
 460:	83 37       	cpi	r24, 0x73	; 115
 462:	71 f0       	breq	.+28     	; 0x480 <vfprintf+0x112>
 464:	83 35       	cpi	r24, 0x53	; 83
 466:	09 f0       	breq	.+2      	; 0x46a <vfprintf+0xfc>
 468:	5b c0       	rjmp	.+182    	; 0x520 <__stack+0x21>
 46a:	22 c0       	rjmp	.+68     	; 0x4b0 <vfprintf+0x142>
 46c:	f8 01       	movw	r30, r16
 46e:	80 81       	ld	r24, Z
 470:	89 83       	std	Y+1, r24	; 0x01
 472:	0e 5f       	subi	r16, 0xFE	; 254
 474:	1f 4f       	sbci	r17, 0xFF	; 255
 476:	44 24       	eor	r4, r4
 478:	43 94       	inc	r4
 47a:	51 2c       	mov	r5, r1
 47c:	54 01       	movw	r10, r8
 47e:	15 c0       	rjmp	.+42     	; 0x4aa <vfprintf+0x13c>
 480:	38 01       	movw	r6, r16
 482:	f2 e0       	ldi	r31, 0x02	; 2
 484:	6f 0e       	add	r6, r31
 486:	71 1c       	adc	r7, r1
 488:	f8 01       	movw	r30, r16
 48a:	a0 80       	ld	r10, Z
 48c:	b1 80       	ldd	r11, Z+1	; 0x01
 48e:	26 ff       	sbrs	r18, 6
 490:	03 c0       	rjmp	.+6      	; 0x498 <vfprintf+0x12a>
 492:	65 2d       	mov	r22, r5
 494:	70 e0       	ldi	r23, 0x00	; 0
 496:	02 c0       	rjmp	.+4      	; 0x49c <vfprintf+0x12e>
 498:	6f ef       	ldi	r22, 0xFF	; 255
 49a:	7f ef       	ldi	r23, 0xFF	; 255
 49c:	c5 01       	movw	r24, r10
 49e:	2c 87       	std	Y+12, r18	; 0x0c
 4a0:	0e 94 de 04 	call	0x9bc	; 0x9bc <strnlen>
 4a4:	2c 01       	movw	r4, r24
 4a6:	83 01       	movw	r16, r6
 4a8:	2c 85       	ldd	r18, Y+12	; 0x0c
 4aa:	2f 77       	andi	r18, 0x7F	; 127
 4ac:	22 2e       	mov	r2, r18
 4ae:	17 c0       	rjmp	.+46     	; 0x4de <vfprintf+0x170>
 4b0:	38 01       	movw	r6, r16
 4b2:	f2 e0       	ldi	r31, 0x02	; 2
 4b4:	6f 0e       	add	r6, r31
 4b6:	71 1c       	adc	r7, r1
 4b8:	f8 01       	movw	r30, r16
 4ba:	a0 80       	ld	r10, Z
 4bc:	b1 80       	ldd	r11, Z+1	; 0x01
 4be:	26 ff       	sbrs	r18, 6
 4c0:	03 c0       	rjmp	.+6      	; 0x4c8 <vfprintf+0x15a>
 4c2:	65 2d       	mov	r22, r5
 4c4:	70 e0       	ldi	r23, 0x00	; 0
 4c6:	02 c0       	rjmp	.+4      	; 0x4cc <vfprintf+0x15e>
 4c8:	6f ef       	ldi	r22, 0xFF	; 255
 4ca:	7f ef       	ldi	r23, 0xFF	; 255
 4cc:	c5 01       	movw	r24, r10
 4ce:	2c 87       	std	Y+12, r18	; 0x0c
 4d0:	0e 94 cc 04 	call	0x998	; 0x998 <strnlen_P>
 4d4:	2c 01       	movw	r4, r24
 4d6:	2c 85       	ldd	r18, Y+12	; 0x0c
 4d8:	20 68       	ori	r18, 0x80	; 128
 4da:	22 2e       	mov	r2, r18
 4dc:	83 01       	movw	r16, r6
 4de:	23 fc       	sbrc	r2, 3
 4e0:	1b c0       	rjmp	.+54     	; 0x518 <__stack+0x19>
 4e2:	83 2d       	mov	r24, r3
 4e4:	90 e0       	ldi	r25, 0x00	; 0
 4e6:	48 16       	cp	r4, r24
 4e8:	59 06       	cpc	r5, r25
 4ea:	b0 f4       	brcc	.+44     	; 0x518 <__stack+0x19>
 4ec:	b7 01       	movw	r22, r14
 4ee:	80 e2       	ldi	r24, 0x20	; 32
 4f0:	90 e0       	ldi	r25, 0x00	; 0
 4f2:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <fputc>
 4f6:	3a 94       	dec	r3
 4f8:	f4 cf       	rjmp	.-24     	; 0x4e2 <vfprintf+0x174>
 4fa:	f5 01       	movw	r30, r10
 4fc:	27 fc       	sbrc	r2, 7
 4fe:	85 91       	lpm	r24, Z+
 500:	27 fe       	sbrs	r2, 7
 502:	81 91       	ld	r24, Z+
 504:	5f 01       	movw	r10, r30
 506:	b7 01       	movw	r22, r14
 508:	90 e0       	ldi	r25, 0x00	; 0
 50a:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <fputc>
 50e:	31 10       	cpse	r3, r1
 510:	3a 94       	dec	r3
 512:	f1 e0       	ldi	r31, 0x01	; 1
 514:	4f 1a       	sub	r4, r31
 516:	51 08       	sbc	r5, r1
 518:	41 14       	cp	r4, r1
 51a:	51 04       	cpc	r5, r1
 51c:	71 f7       	brne	.-36     	; 0x4fa <vfprintf+0x18c>
 51e:	e5 c0       	rjmp	.+458    	; 0x6ea <__stack+0x1eb>
 520:	84 36       	cpi	r24, 0x64	; 100
 522:	11 f0       	breq	.+4      	; 0x528 <__stack+0x29>
 524:	89 36       	cpi	r24, 0x69	; 105
 526:	39 f5       	brne	.+78     	; 0x576 <__stack+0x77>
 528:	f8 01       	movw	r30, r16
 52a:	27 ff       	sbrs	r18, 7
 52c:	07 c0       	rjmp	.+14     	; 0x53c <__stack+0x3d>
 52e:	60 81       	ld	r22, Z
 530:	71 81       	ldd	r23, Z+1	; 0x01
 532:	82 81       	ldd	r24, Z+2	; 0x02
 534:	93 81       	ldd	r25, Z+3	; 0x03
 536:	0c 5f       	subi	r16, 0xFC	; 252
 538:	1f 4f       	sbci	r17, 0xFF	; 255
 53a:	08 c0       	rjmp	.+16     	; 0x54c <__stack+0x4d>
 53c:	60 81       	ld	r22, Z
 53e:	71 81       	ldd	r23, Z+1	; 0x01
 540:	88 27       	eor	r24, r24
 542:	77 fd       	sbrc	r23, 7
 544:	80 95       	com	r24
 546:	98 2f       	mov	r25, r24
 548:	0e 5f       	subi	r16, 0xFE	; 254
 54a:	1f 4f       	sbci	r17, 0xFF	; 255
 54c:	2f 76       	andi	r18, 0x6F	; 111
 54e:	b2 2e       	mov	r11, r18
 550:	97 ff       	sbrs	r25, 7
 552:	09 c0       	rjmp	.+18     	; 0x566 <__stack+0x67>
 554:	90 95       	com	r25
 556:	80 95       	com	r24
 558:	70 95       	com	r23
 55a:	61 95       	neg	r22
 55c:	7f 4f       	sbci	r23, 0xFF	; 255
 55e:	8f 4f       	sbci	r24, 0xFF	; 255
 560:	9f 4f       	sbci	r25, 0xFF	; 255
 562:	20 68       	ori	r18, 0x80	; 128
 564:	b2 2e       	mov	r11, r18
 566:	2a e0       	ldi	r18, 0x0A	; 10
 568:	30 e0       	ldi	r19, 0x00	; 0
 56a:	a4 01       	movw	r20, r8
 56c:	0e 94 1b 05 	call	0xa36	; 0xa36 <__ultoa_invert>
 570:	a8 2e       	mov	r10, r24
 572:	a8 18       	sub	r10, r8
 574:	44 c0       	rjmp	.+136    	; 0x5fe <__stack+0xff>
 576:	85 37       	cpi	r24, 0x75	; 117
 578:	29 f4       	brne	.+10     	; 0x584 <__stack+0x85>
 57a:	2f 7e       	andi	r18, 0xEF	; 239
 57c:	b2 2e       	mov	r11, r18
 57e:	2a e0       	ldi	r18, 0x0A	; 10
 580:	30 e0       	ldi	r19, 0x00	; 0
 582:	25 c0       	rjmp	.+74     	; 0x5ce <__stack+0xcf>
 584:	f2 2f       	mov	r31, r18
 586:	f9 7f       	andi	r31, 0xF9	; 249
 588:	bf 2e       	mov	r11, r31
 58a:	8f 36       	cpi	r24, 0x6F	; 111
 58c:	c1 f0       	breq	.+48     	; 0x5be <__stack+0xbf>
 58e:	18 f4       	brcc	.+6      	; 0x596 <__stack+0x97>
 590:	88 35       	cpi	r24, 0x58	; 88
 592:	79 f0       	breq	.+30     	; 0x5b2 <__stack+0xb3>
 594:	b4 c0       	rjmp	.+360    	; 0x6fe <__stack+0x1ff>
 596:	80 37       	cpi	r24, 0x70	; 112
 598:	19 f0       	breq	.+6      	; 0x5a0 <__stack+0xa1>
 59a:	88 37       	cpi	r24, 0x78	; 120
 59c:	21 f0       	breq	.+8      	; 0x5a6 <__stack+0xa7>
 59e:	af c0       	rjmp	.+350    	; 0x6fe <__stack+0x1ff>
 5a0:	2f 2f       	mov	r18, r31
 5a2:	20 61       	ori	r18, 0x10	; 16
 5a4:	b2 2e       	mov	r11, r18
 5a6:	b4 fe       	sbrs	r11, 4
 5a8:	0d c0       	rjmp	.+26     	; 0x5c4 <__stack+0xc5>
 5aa:	8b 2d       	mov	r24, r11
 5ac:	84 60       	ori	r24, 0x04	; 4
 5ae:	b8 2e       	mov	r11, r24
 5b0:	09 c0       	rjmp	.+18     	; 0x5c4 <__stack+0xc5>
 5b2:	24 ff       	sbrs	r18, 4
 5b4:	0a c0       	rjmp	.+20     	; 0x5ca <__stack+0xcb>
 5b6:	9f 2f       	mov	r25, r31
 5b8:	96 60       	ori	r25, 0x06	; 6
 5ba:	b9 2e       	mov	r11, r25
 5bc:	06 c0       	rjmp	.+12     	; 0x5ca <__stack+0xcb>
 5be:	28 e0       	ldi	r18, 0x08	; 8
 5c0:	30 e0       	ldi	r19, 0x00	; 0
 5c2:	05 c0       	rjmp	.+10     	; 0x5ce <__stack+0xcf>
 5c4:	20 e1       	ldi	r18, 0x10	; 16
 5c6:	30 e0       	ldi	r19, 0x00	; 0
 5c8:	02 c0       	rjmp	.+4      	; 0x5ce <__stack+0xcf>
 5ca:	20 e1       	ldi	r18, 0x10	; 16
 5cc:	32 e0       	ldi	r19, 0x02	; 2
 5ce:	f8 01       	movw	r30, r16
 5d0:	b7 fe       	sbrs	r11, 7
 5d2:	07 c0       	rjmp	.+14     	; 0x5e2 <__stack+0xe3>
 5d4:	60 81       	ld	r22, Z
 5d6:	71 81       	ldd	r23, Z+1	; 0x01
 5d8:	82 81       	ldd	r24, Z+2	; 0x02
 5da:	93 81       	ldd	r25, Z+3	; 0x03
 5dc:	0c 5f       	subi	r16, 0xFC	; 252
 5de:	1f 4f       	sbci	r17, 0xFF	; 255
 5e0:	06 c0       	rjmp	.+12     	; 0x5ee <__stack+0xef>
 5e2:	60 81       	ld	r22, Z
 5e4:	71 81       	ldd	r23, Z+1	; 0x01
 5e6:	80 e0       	ldi	r24, 0x00	; 0
 5e8:	90 e0       	ldi	r25, 0x00	; 0
 5ea:	0e 5f       	subi	r16, 0xFE	; 254
 5ec:	1f 4f       	sbci	r17, 0xFF	; 255
 5ee:	a4 01       	movw	r20, r8
 5f0:	0e 94 1b 05 	call	0xa36	; 0xa36 <__ultoa_invert>
 5f4:	a8 2e       	mov	r10, r24
 5f6:	a8 18       	sub	r10, r8
 5f8:	fb 2d       	mov	r31, r11
 5fa:	ff 77       	andi	r31, 0x7F	; 127
 5fc:	bf 2e       	mov	r11, r31
 5fe:	b6 fe       	sbrs	r11, 6
 600:	0b c0       	rjmp	.+22     	; 0x618 <__stack+0x119>
 602:	2b 2d       	mov	r18, r11
 604:	2e 7f       	andi	r18, 0xFE	; 254
 606:	a5 14       	cp	r10, r5
 608:	50 f4       	brcc	.+20     	; 0x61e <__stack+0x11f>
 60a:	b4 fe       	sbrs	r11, 4
 60c:	0a c0       	rjmp	.+20     	; 0x622 <__stack+0x123>
 60e:	b2 fc       	sbrc	r11, 2
 610:	08 c0       	rjmp	.+16     	; 0x622 <__stack+0x123>
 612:	2b 2d       	mov	r18, r11
 614:	2e 7e       	andi	r18, 0xEE	; 238
 616:	05 c0       	rjmp	.+10     	; 0x622 <__stack+0x123>
 618:	7a 2c       	mov	r7, r10
 61a:	2b 2d       	mov	r18, r11
 61c:	03 c0       	rjmp	.+6      	; 0x624 <__stack+0x125>
 61e:	7a 2c       	mov	r7, r10
 620:	01 c0       	rjmp	.+2      	; 0x624 <__stack+0x125>
 622:	75 2c       	mov	r7, r5
 624:	24 ff       	sbrs	r18, 4
 626:	0d c0       	rjmp	.+26     	; 0x642 <__stack+0x143>
 628:	fe 01       	movw	r30, r28
 62a:	ea 0d       	add	r30, r10
 62c:	f1 1d       	adc	r31, r1
 62e:	80 81       	ld	r24, Z
 630:	80 33       	cpi	r24, 0x30	; 48
 632:	11 f4       	brne	.+4      	; 0x638 <__stack+0x139>
 634:	29 7e       	andi	r18, 0xE9	; 233
 636:	09 c0       	rjmp	.+18     	; 0x64a <__stack+0x14b>
 638:	22 ff       	sbrs	r18, 2
 63a:	06 c0       	rjmp	.+12     	; 0x648 <__stack+0x149>
 63c:	73 94       	inc	r7
 63e:	73 94       	inc	r7
 640:	04 c0       	rjmp	.+8      	; 0x64a <__stack+0x14b>
 642:	82 2f       	mov	r24, r18
 644:	86 78       	andi	r24, 0x86	; 134
 646:	09 f0       	breq	.+2      	; 0x64a <__stack+0x14b>
 648:	73 94       	inc	r7
 64a:	23 fd       	sbrc	r18, 3
 64c:	13 c0       	rjmp	.+38     	; 0x674 <__stack+0x175>
 64e:	20 ff       	sbrs	r18, 0
 650:	06 c0       	rjmp	.+12     	; 0x65e <__stack+0x15f>
 652:	5a 2c       	mov	r5, r10
 654:	73 14       	cp	r7, r3
 656:	18 f4       	brcc	.+6      	; 0x65e <__stack+0x15f>
 658:	53 0c       	add	r5, r3
 65a:	57 18       	sub	r5, r7
 65c:	73 2c       	mov	r7, r3
 65e:	73 14       	cp	r7, r3
 660:	68 f4       	brcc	.+26     	; 0x67c <__stack+0x17d>
 662:	b7 01       	movw	r22, r14
 664:	80 e2       	ldi	r24, 0x20	; 32
 666:	90 e0       	ldi	r25, 0x00	; 0
 668:	2c 87       	std	Y+12, r18	; 0x0c
 66a:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <fputc>
 66e:	73 94       	inc	r7
 670:	2c 85       	ldd	r18, Y+12	; 0x0c
 672:	f5 cf       	rjmp	.-22     	; 0x65e <__stack+0x15f>
 674:	73 14       	cp	r7, r3
 676:	10 f4       	brcc	.+4      	; 0x67c <__stack+0x17d>
 678:	37 18       	sub	r3, r7
 67a:	01 c0       	rjmp	.+2      	; 0x67e <__stack+0x17f>
 67c:	31 2c       	mov	r3, r1
 67e:	24 ff       	sbrs	r18, 4
 680:	12 c0       	rjmp	.+36     	; 0x6a6 <__stack+0x1a7>
 682:	b7 01       	movw	r22, r14
 684:	80 e3       	ldi	r24, 0x30	; 48
 686:	90 e0       	ldi	r25, 0x00	; 0
 688:	2c 87       	std	Y+12, r18	; 0x0c
 68a:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <fputc>
 68e:	2c 85       	ldd	r18, Y+12	; 0x0c
 690:	22 ff       	sbrs	r18, 2
 692:	17 c0       	rjmp	.+46     	; 0x6c2 <__stack+0x1c3>
 694:	21 ff       	sbrs	r18, 1
 696:	03 c0       	rjmp	.+6      	; 0x69e <__stack+0x19f>
 698:	88 e5       	ldi	r24, 0x58	; 88
 69a:	90 e0       	ldi	r25, 0x00	; 0
 69c:	02 c0       	rjmp	.+4      	; 0x6a2 <__stack+0x1a3>
 69e:	88 e7       	ldi	r24, 0x78	; 120
 6a0:	90 e0       	ldi	r25, 0x00	; 0
 6a2:	b7 01       	movw	r22, r14
 6a4:	0c c0       	rjmp	.+24     	; 0x6be <__stack+0x1bf>
 6a6:	82 2f       	mov	r24, r18
 6a8:	86 78       	andi	r24, 0x86	; 134
 6aa:	59 f0       	breq	.+22     	; 0x6c2 <__stack+0x1c3>
 6ac:	21 fd       	sbrc	r18, 1
 6ae:	02 c0       	rjmp	.+4      	; 0x6b4 <__stack+0x1b5>
 6b0:	80 e2       	ldi	r24, 0x20	; 32
 6b2:	01 c0       	rjmp	.+2      	; 0x6b6 <__stack+0x1b7>
 6b4:	8b e2       	ldi	r24, 0x2B	; 43
 6b6:	27 fd       	sbrc	r18, 7
 6b8:	8d e2       	ldi	r24, 0x2D	; 45
 6ba:	b7 01       	movw	r22, r14
 6bc:	90 e0       	ldi	r25, 0x00	; 0
 6be:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <fputc>
 6c2:	a5 14       	cp	r10, r5
 6c4:	38 f4       	brcc	.+14     	; 0x6d4 <__stack+0x1d5>
 6c6:	b7 01       	movw	r22, r14
 6c8:	80 e3       	ldi	r24, 0x30	; 48
 6ca:	90 e0       	ldi	r25, 0x00	; 0
 6cc:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <fputc>
 6d0:	5a 94       	dec	r5
 6d2:	f7 cf       	rjmp	.-18     	; 0x6c2 <__stack+0x1c3>
 6d4:	aa 94       	dec	r10
 6d6:	f4 01       	movw	r30, r8
 6d8:	ea 0d       	add	r30, r10
 6da:	f1 1d       	adc	r31, r1
 6dc:	80 81       	ld	r24, Z
 6de:	b7 01       	movw	r22, r14
 6e0:	90 e0       	ldi	r25, 0x00	; 0
 6e2:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <fputc>
 6e6:	a1 10       	cpse	r10, r1
 6e8:	f5 cf       	rjmp	.-22     	; 0x6d4 <__stack+0x1d5>
 6ea:	33 20       	and	r3, r3
 6ec:	09 f4       	brne	.+2      	; 0x6f0 <__stack+0x1f1>
 6ee:	51 ce       	rjmp	.-862    	; 0x392 <vfprintf+0x24>
 6f0:	b7 01       	movw	r22, r14
 6f2:	80 e2       	ldi	r24, 0x20	; 32
 6f4:	90 e0       	ldi	r25, 0x00	; 0
 6f6:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <fputc>
 6fa:	3a 94       	dec	r3
 6fc:	f6 cf       	rjmp	.-20     	; 0x6ea <__stack+0x1eb>
 6fe:	f7 01       	movw	r30, r14
 700:	86 81       	ldd	r24, Z+6	; 0x06
 702:	97 81       	ldd	r25, Z+7	; 0x07
 704:	02 c0       	rjmp	.+4      	; 0x70a <__stack+0x20b>
 706:	8f ef       	ldi	r24, 0xFF	; 255
 708:	9f ef       	ldi	r25, 0xFF	; 255
 70a:	2c 96       	adiw	r28, 0x0c	; 12
 70c:	e2 e1       	ldi	r30, 0x12	; 18
 70e:	0c 94 95 05 	jmp	0xb2a	; 0xb2a <__epilogue_restores__>

00000712 <calloc>:
 712:	0f 93       	push	r16
 714:	1f 93       	push	r17
 716:	cf 93       	push	r28
 718:	df 93       	push	r29
 71a:	86 9f       	mul	r24, r22
 71c:	80 01       	movw	r16, r0
 71e:	87 9f       	mul	r24, r23
 720:	10 0d       	add	r17, r0
 722:	96 9f       	mul	r25, r22
 724:	10 0d       	add	r17, r0
 726:	11 24       	eor	r1, r1
 728:	c8 01       	movw	r24, r16
 72a:	0e 94 a5 03 	call	0x74a	; 0x74a <malloc>
 72e:	ec 01       	movw	r28, r24
 730:	00 97       	sbiw	r24, 0x00	; 0
 732:	29 f0       	breq	.+10     	; 0x73e <calloc+0x2c>
 734:	a8 01       	movw	r20, r16
 736:	60 e0       	ldi	r22, 0x00	; 0
 738:	70 e0       	ldi	r23, 0x00	; 0
 73a:	0e 94 d7 04 	call	0x9ae	; 0x9ae <memset>
 73e:	ce 01       	movw	r24, r28
 740:	df 91       	pop	r29
 742:	cf 91       	pop	r28
 744:	1f 91       	pop	r17
 746:	0f 91       	pop	r16
 748:	08 95       	ret

0000074a <malloc>:
 74a:	cf 93       	push	r28
 74c:	df 93       	push	r29
 74e:	82 30       	cpi	r24, 0x02	; 2
 750:	91 05       	cpc	r25, r1
 752:	10 f4       	brcc	.+4      	; 0x758 <malloc+0xe>
 754:	82 e0       	ldi	r24, 0x02	; 2
 756:	90 e0       	ldi	r25, 0x00	; 0
 758:	e0 91 08 02 	lds	r30, 0x0208
 75c:	f0 91 09 02 	lds	r31, 0x0209
 760:	20 e0       	ldi	r18, 0x00	; 0
 762:	30 e0       	ldi	r19, 0x00	; 0
 764:	a0 e0       	ldi	r26, 0x00	; 0
 766:	b0 e0       	ldi	r27, 0x00	; 0
 768:	30 97       	sbiw	r30, 0x00	; 0
 76a:	39 f1       	breq	.+78     	; 0x7ba <malloc+0x70>
 76c:	40 81       	ld	r20, Z
 76e:	51 81       	ldd	r21, Z+1	; 0x01
 770:	48 17       	cp	r20, r24
 772:	59 07       	cpc	r21, r25
 774:	b8 f0       	brcs	.+46     	; 0x7a4 <malloc+0x5a>
 776:	48 17       	cp	r20, r24
 778:	59 07       	cpc	r21, r25
 77a:	71 f4       	brne	.+28     	; 0x798 <malloc+0x4e>
 77c:	82 81       	ldd	r24, Z+2	; 0x02
 77e:	93 81       	ldd	r25, Z+3	; 0x03
 780:	10 97       	sbiw	r26, 0x00	; 0
 782:	29 f0       	breq	.+10     	; 0x78e <malloc+0x44>
 784:	13 96       	adiw	r26, 0x03	; 3
 786:	9c 93       	st	X, r25
 788:	8e 93       	st	-X, r24
 78a:	12 97       	sbiw	r26, 0x02	; 2
 78c:	2c c0       	rjmp	.+88     	; 0x7e6 <malloc+0x9c>
 78e:	90 93 09 02 	sts	0x0209, r25
 792:	80 93 08 02 	sts	0x0208, r24
 796:	27 c0       	rjmp	.+78     	; 0x7e6 <malloc+0x9c>
 798:	21 15       	cp	r18, r1
 79a:	31 05       	cpc	r19, r1
 79c:	31 f0       	breq	.+12     	; 0x7aa <malloc+0x60>
 79e:	42 17       	cp	r20, r18
 7a0:	53 07       	cpc	r21, r19
 7a2:	18 f0       	brcs	.+6      	; 0x7aa <malloc+0x60>
 7a4:	a9 01       	movw	r20, r18
 7a6:	db 01       	movw	r26, r22
 7a8:	01 c0       	rjmp	.+2      	; 0x7ac <malloc+0x62>
 7aa:	ef 01       	movw	r28, r30
 7ac:	9a 01       	movw	r18, r20
 7ae:	bd 01       	movw	r22, r26
 7b0:	df 01       	movw	r26, r30
 7b2:	02 80       	ldd	r0, Z+2	; 0x02
 7b4:	f3 81       	ldd	r31, Z+3	; 0x03
 7b6:	e0 2d       	mov	r30, r0
 7b8:	d7 cf       	rjmp	.-82     	; 0x768 <malloc+0x1e>
 7ba:	21 15       	cp	r18, r1
 7bc:	31 05       	cpc	r19, r1
 7be:	f9 f0       	breq	.+62     	; 0x7fe <malloc+0xb4>
 7c0:	28 1b       	sub	r18, r24
 7c2:	39 0b       	sbc	r19, r25
 7c4:	24 30       	cpi	r18, 0x04	; 4
 7c6:	31 05       	cpc	r19, r1
 7c8:	80 f4       	brcc	.+32     	; 0x7ea <malloc+0xa0>
 7ca:	8a 81       	ldd	r24, Y+2	; 0x02
 7cc:	9b 81       	ldd	r25, Y+3	; 0x03
 7ce:	61 15       	cp	r22, r1
 7d0:	71 05       	cpc	r23, r1
 7d2:	21 f0       	breq	.+8      	; 0x7dc <malloc+0x92>
 7d4:	fb 01       	movw	r30, r22
 7d6:	93 83       	std	Z+3, r25	; 0x03
 7d8:	82 83       	std	Z+2, r24	; 0x02
 7da:	04 c0       	rjmp	.+8      	; 0x7e4 <malloc+0x9a>
 7dc:	90 93 09 02 	sts	0x0209, r25
 7e0:	80 93 08 02 	sts	0x0208, r24
 7e4:	fe 01       	movw	r30, r28
 7e6:	32 96       	adiw	r30, 0x02	; 2
 7e8:	44 c0       	rjmp	.+136    	; 0x872 <malloc+0x128>
 7ea:	fe 01       	movw	r30, r28
 7ec:	e2 0f       	add	r30, r18
 7ee:	f3 1f       	adc	r31, r19
 7f0:	81 93       	st	Z+, r24
 7f2:	91 93       	st	Z+, r25
 7f4:	22 50       	subi	r18, 0x02	; 2
 7f6:	31 09       	sbc	r19, r1
 7f8:	39 83       	std	Y+1, r19	; 0x01
 7fa:	28 83       	st	Y, r18
 7fc:	3a c0       	rjmp	.+116    	; 0x872 <malloc+0x128>
 7fe:	20 91 06 02 	lds	r18, 0x0206
 802:	30 91 07 02 	lds	r19, 0x0207
 806:	23 2b       	or	r18, r19
 808:	41 f4       	brne	.+16     	; 0x81a <malloc+0xd0>
 80a:	20 91 02 01 	lds	r18, 0x0102
 80e:	30 91 03 01 	lds	r19, 0x0103
 812:	30 93 07 02 	sts	0x0207, r19
 816:	20 93 06 02 	sts	0x0206, r18
 81a:	20 91 00 01 	lds	r18, 0x0100
 81e:	30 91 01 01 	lds	r19, 0x0101
 822:	21 15       	cp	r18, r1
 824:	31 05       	cpc	r19, r1
 826:	41 f4       	brne	.+16     	; 0x838 <malloc+0xee>
 828:	2d b7       	in	r18, 0x3d	; 61
 82a:	3e b7       	in	r19, 0x3e	; 62
 82c:	40 91 04 01 	lds	r20, 0x0104
 830:	50 91 05 01 	lds	r21, 0x0105
 834:	24 1b       	sub	r18, r20
 836:	35 0b       	sbc	r19, r21
 838:	e0 91 06 02 	lds	r30, 0x0206
 83c:	f0 91 07 02 	lds	r31, 0x0207
 840:	e2 17       	cp	r30, r18
 842:	f3 07       	cpc	r31, r19
 844:	a0 f4       	brcc	.+40     	; 0x86e <malloc+0x124>
 846:	2e 1b       	sub	r18, r30
 848:	3f 0b       	sbc	r19, r31
 84a:	28 17       	cp	r18, r24
 84c:	39 07       	cpc	r19, r25
 84e:	78 f0       	brcs	.+30     	; 0x86e <malloc+0x124>
 850:	ac 01       	movw	r20, r24
 852:	4e 5f       	subi	r20, 0xFE	; 254
 854:	5f 4f       	sbci	r21, 0xFF	; 255
 856:	24 17       	cp	r18, r20
 858:	35 07       	cpc	r19, r21
 85a:	48 f0       	brcs	.+18     	; 0x86e <malloc+0x124>
 85c:	4e 0f       	add	r20, r30
 85e:	5f 1f       	adc	r21, r31
 860:	50 93 07 02 	sts	0x0207, r21
 864:	40 93 06 02 	sts	0x0206, r20
 868:	81 93       	st	Z+, r24
 86a:	91 93       	st	Z+, r25
 86c:	02 c0       	rjmp	.+4      	; 0x872 <malloc+0x128>
 86e:	e0 e0       	ldi	r30, 0x00	; 0
 870:	f0 e0       	ldi	r31, 0x00	; 0
 872:	cf 01       	movw	r24, r30
 874:	df 91       	pop	r29
 876:	cf 91       	pop	r28
 878:	08 95       	ret

0000087a <free>:
 87a:	cf 93       	push	r28
 87c:	df 93       	push	r29
 87e:	00 97       	sbiw	r24, 0x00	; 0
 880:	09 f4       	brne	.+2      	; 0x884 <free+0xa>
 882:	87 c0       	rjmp	.+270    	; 0x992 <free+0x118>
 884:	fc 01       	movw	r30, r24
 886:	32 97       	sbiw	r30, 0x02	; 2
 888:	13 82       	std	Z+3, r1	; 0x03
 88a:	12 82       	std	Z+2, r1	; 0x02
 88c:	c0 91 08 02 	lds	r28, 0x0208
 890:	d0 91 09 02 	lds	r29, 0x0209
 894:	20 97       	sbiw	r28, 0x00	; 0
 896:	81 f4       	brne	.+32     	; 0x8b8 <free+0x3e>
 898:	20 81       	ld	r18, Z
 89a:	31 81       	ldd	r19, Z+1	; 0x01
 89c:	28 0f       	add	r18, r24
 89e:	39 1f       	adc	r19, r25
 8a0:	80 91 06 02 	lds	r24, 0x0206
 8a4:	90 91 07 02 	lds	r25, 0x0207
 8a8:	82 17       	cp	r24, r18
 8aa:	93 07       	cpc	r25, r19
 8ac:	79 f5       	brne	.+94     	; 0x90c <free+0x92>
 8ae:	f0 93 07 02 	sts	0x0207, r31
 8b2:	e0 93 06 02 	sts	0x0206, r30
 8b6:	6d c0       	rjmp	.+218    	; 0x992 <free+0x118>
 8b8:	de 01       	movw	r26, r28
 8ba:	20 e0       	ldi	r18, 0x00	; 0
 8bc:	30 e0       	ldi	r19, 0x00	; 0
 8be:	ae 17       	cp	r26, r30
 8c0:	bf 07       	cpc	r27, r31
 8c2:	50 f4       	brcc	.+20     	; 0x8d8 <free+0x5e>
 8c4:	12 96       	adiw	r26, 0x02	; 2
 8c6:	4d 91       	ld	r20, X+
 8c8:	5c 91       	ld	r21, X
 8ca:	13 97       	sbiw	r26, 0x03	; 3
 8cc:	9d 01       	movw	r18, r26
 8ce:	41 15       	cp	r20, r1
 8d0:	51 05       	cpc	r21, r1
 8d2:	09 f1       	breq	.+66     	; 0x916 <free+0x9c>
 8d4:	da 01       	movw	r26, r20
 8d6:	f3 cf       	rjmp	.-26     	; 0x8be <free+0x44>
 8d8:	b3 83       	std	Z+3, r27	; 0x03
 8da:	a2 83       	std	Z+2, r26	; 0x02
 8dc:	40 81       	ld	r20, Z
 8de:	51 81       	ldd	r21, Z+1	; 0x01
 8e0:	84 0f       	add	r24, r20
 8e2:	95 1f       	adc	r25, r21
 8e4:	8a 17       	cp	r24, r26
 8e6:	9b 07       	cpc	r25, r27
 8e8:	71 f4       	brne	.+28     	; 0x906 <free+0x8c>
 8ea:	8d 91       	ld	r24, X+
 8ec:	9c 91       	ld	r25, X
 8ee:	11 97       	sbiw	r26, 0x01	; 1
 8f0:	84 0f       	add	r24, r20
 8f2:	95 1f       	adc	r25, r21
 8f4:	02 96       	adiw	r24, 0x02	; 2
 8f6:	91 83       	std	Z+1, r25	; 0x01
 8f8:	80 83       	st	Z, r24
 8fa:	12 96       	adiw	r26, 0x02	; 2
 8fc:	8d 91       	ld	r24, X+
 8fe:	9c 91       	ld	r25, X
 900:	13 97       	sbiw	r26, 0x03	; 3
 902:	93 83       	std	Z+3, r25	; 0x03
 904:	82 83       	std	Z+2, r24	; 0x02
 906:	21 15       	cp	r18, r1
 908:	31 05       	cpc	r19, r1
 90a:	29 f4       	brne	.+10     	; 0x916 <free+0x9c>
 90c:	f0 93 09 02 	sts	0x0209, r31
 910:	e0 93 08 02 	sts	0x0208, r30
 914:	3e c0       	rjmp	.+124    	; 0x992 <free+0x118>
 916:	d9 01       	movw	r26, r18
 918:	13 96       	adiw	r26, 0x03	; 3
 91a:	fc 93       	st	X, r31
 91c:	ee 93       	st	-X, r30
 91e:	12 97       	sbiw	r26, 0x02	; 2
 920:	4d 91       	ld	r20, X+
 922:	5d 91       	ld	r21, X+
 924:	a4 0f       	add	r26, r20
 926:	b5 1f       	adc	r27, r21
 928:	ea 17       	cp	r30, r26
 92a:	fb 07       	cpc	r31, r27
 92c:	79 f4       	brne	.+30     	; 0x94c <free+0xd2>
 92e:	80 81       	ld	r24, Z
 930:	91 81       	ldd	r25, Z+1	; 0x01
 932:	84 0f       	add	r24, r20
 934:	95 1f       	adc	r25, r21
 936:	02 96       	adiw	r24, 0x02	; 2
 938:	d9 01       	movw	r26, r18
 93a:	11 96       	adiw	r26, 0x01	; 1
 93c:	9c 93       	st	X, r25
 93e:	8e 93       	st	-X, r24
 940:	82 81       	ldd	r24, Z+2	; 0x02
 942:	93 81       	ldd	r25, Z+3	; 0x03
 944:	13 96       	adiw	r26, 0x03	; 3
 946:	9c 93       	st	X, r25
 948:	8e 93       	st	-X, r24
 94a:	12 97       	sbiw	r26, 0x02	; 2
 94c:	e0 e0       	ldi	r30, 0x00	; 0
 94e:	f0 e0       	ldi	r31, 0x00	; 0
 950:	8a 81       	ldd	r24, Y+2	; 0x02
 952:	9b 81       	ldd	r25, Y+3	; 0x03
 954:	00 97       	sbiw	r24, 0x00	; 0
 956:	19 f0       	breq	.+6      	; 0x95e <free+0xe4>
 958:	fe 01       	movw	r30, r28
 95a:	ec 01       	movw	r28, r24
 95c:	f9 cf       	rjmp	.-14     	; 0x950 <free+0xd6>
 95e:	ce 01       	movw	r24, r28
 960:	02 96       	adiw	r24, 0x02	; 2
 962:	28 81       	ld	r18, Y
 964:	39 81       	ldd	r19, Y+1	; 0x01
 966:	82 0f       	add	r24, r18
 968:	93 1f       	adc	r25, r19
 96a:	20 91 06 02 	lds	r18, 0x0206
 96e:	30 91 07 02 	lds	r19, 0x0207
 972:	28 17       	cp	r18, r24
 974:	39 07       	cpc	r19, r25
 976:	69 f4       	brne	.+26     	; 0x992 <free+0x118>
 978:	30 97       	sbiw	r30, 0x00	; 0
 97a:	29 f4       	brne	.+10     	; 0x986 <free+0x10c>
 97c:	10 92 09 02 	sts	0x0209, r1
 980:	10 92 08 02 	sts	0x0208, r1
 984:	02 c0       	rjmp	.+4      	; 0x98a <free+0x110>
 986:	13 82       	std	Z+3, r1	; 0x03
 988:	12 82       	std	Z+2, r1	; 0x02
 98a:	d0 93 07 02 	sts	0x0207, r29
 98e:	c0 93 06 02 	sts	0x0206, r28
 992:	df 91       	pop	r29
 994:	cf 91       	pop	r28
 996:	08 95       	ret

00000998 <strnlen_P>:
 998:	fc 01       	movw	r30, r24
 99a:	05 90       	lpm	r0, Z+
 99c:	61 50       	subi	r22, 0x01	; 1
 99e:	70 40       	sbci	r23, 0x00	; 0
 9a0:	01 10       	cpse	r0, r1
 9a2:	d8 f7       	brcc	.-10     	; 0x99a <strnlen_P+0x2>
 9a4:	80 95       	com	r24
 9a6:	90 95       	com	r25
 9a8:	8e 0f       	add	r24, r30
 9aa:	9f 1f       	adc	r25, r31
 9ac:	08 95       	ret

000009ae <memset>:
 9ae:	dc 01       	movw	r26, r24
 9b0:	01 c0       	rjmp	.+2      	; 0x9b4 <memset+0x6>
 9b2:	6d 93       	st	X+, r22
 9b4:	41 50       	subi	r20, 0x01	; 1
 9b6:	50 40       	sbci	r21, 0x00	; 0
 9b8:	e0 f7       	brcc	.-8      	; 0x9b2 <memset+0x4>
 9ba:	08 95       	ret

000009bc <strnlen>:
 9bc:	fc 01       	movw	r30, r24
 9be:	61 50       	subi	r22, 0x01	; 1
 9c0:	70 40       	sbci	r23, 0x00	; 0
 9c2:	01 90       	ld	r0, Z+
 9c4:	01 10       	cpse	r0, r1
 9c6:	d8 f7       	brcc	.-10     	; 0x9be <strnlen+0x2>
 9c8:	80 95       	com	r24
 9ca:	90 95       	com	r25
 9cc:	8e 0f       	add	r24, r30
 9ce:	9f 1f       	adc	r25, r31
 9d0:	08 95       	ret

000009d2 <fputc>:
 9d2:	0f 93       	push	r16
 9d4:	1f 93       	push	r17
 9d6:	cf 93       	push	r28
 9d8:	df 93       	push	r29
 9da:	18 2f       	mov	r17, r24
 9dc:	09 2f       	mov	r16, r25
 9de:	eb 01       	movw	r28, r22
 9e0:	8b 81       	ldd	r24, Y+3	; 0x03
 9e2:	81 fd       	sbrc	r24, 1
 9e4:	03 c0       	rjmp	.+6      	; 0x9ec <fputc+0x1a>
 9e6:	8f ef       	ldi	r24, 0xFF	; 255
 9e8:	9f ef       	ldi	r25, 0xFF	; 255
 9ea:	20 c0       	rjmp	.+64     	; 0xa2c <fputc+0x5a>
 9ec:	82 ff       	sbrs	r24, 2
 9ee:	10 c0       	rjmp	.+32     	; 0xa10 <fputc+0x3e>
 9f0:	4e 81       	ldd	r20, Y+6	; 0x06
 9f2:	5f 81       	ldd	r21, Y+7	; 0x07
 9f4:	2c 81       	ldd	r18, Y+4	; 0x04
 9f6:	3d 81       	ldd	r19, Y+5	; 0x05
 9f8:	42 17       	cp	r20, r18
 9fa:	53 07       	cpc	r21, r19
 9fc:	7c f4       	brge	.+30     	; 0xa1c <fputc+0x4a>
 9fe:	e8 81       	ld	r30, Y
 a00:	f9 81       	ldd	r31, Y+1	; 0x01
 a02:	9f 01       	movw	r18, r30
 a04:	2f 5f       	subi	r18, 0xFF	; 255
 a06:	3f 4f       	sbci	r19, 0xFF	; 255
 a08:	39 83       	std	Y+1, r19	; 0x01
 a0a:	28 83       	st	Y, r18
 a0c:	10 83       	st	Z, r17
 a0e:	06 c0       	rjmp	.+12     	; 0xa1c <fputc+0x4a>
 a10:	e8 85       	ldd	r30, Y+8	; 0x08
 a12:	f9 85       	ldd	r31, Y+9	; 0x09
 a14:	81 2f       	mov	r24, r17
 a16:	09 95       	icall
 a18:	89 2b       	or	r24, r25
 a1a:	29 f7       	brne	.-54     	; 0x9e6 <fputc+0x14>
 a1c:	2e 81       	ldd	r18, Y+6	; 0x06
 a1e:	3f 81       	ldd	r19, Y+7	; 0x07
 a20:	2f 5f       	subi	r18, 0xFF	; 255
 a22:	3f 4f       	sbci	r19, 0xFF	; 255
 a24:	3f 83       	std	Y+7, r19	; 0x07
 a26:	2e 83       	std	Y+6, r18	; 0x06
 a28:	81 2f       	mov	r24, r17
 a2a:	90 2f       	mov	r25, r16
 a2c:	df 91       	pop	r29
 a2e:	cf 91       	pop	r28
 a30:	1f 91       	pop	r17
 a32:	0f 91       	pop	r16
 a34:	08 95       	ret

00000a36 <__ultoa_invert>:
 a36:	fa 01       	movw	r30, r20
 a38:	aa 27       	eor	r26, r26
 a3a:	28 30       	cpi	r18, 0x08	; 8
 a3c:	51 f1       	breq	.+84     	; 0xa92 <__ultoa_invert+0x5c>
 a3e:	20 31       	cpi	r18, 0x10	; 16
 a40:	81 f1       	breq	.+96     	; 0xaa2 <__ultoa_invert+0x6c>
 a42:	e8 94       	clt
 a44:	6f 93       	push	r22
 a46:	6e 7f       	andi	r22, 0xFE	; 254
 a48:	6e 5f       	subi	r22, 0xFE	; 254
 a4a:	7f 4f       	sbci	r23, 0xFF	; 255
 a4c:	8f 4f       	sbci	r24, 0xFF	; 255
 a4e:	9f 4f       	sbci	r25, 0xFF	; 255
 a50:	af 4f       	sbci	r26, 0xFF	; 255
 a52:	b1 e0       	ldi	r27, 0x01	; 1
 a54:	3e d0       	rcall	.+124    	; 0xad2 <__ultoa_invert+0x9c>
 a56:	b4 e0       	ldi	r27, 0x04	; 4
 a58:	3c d0       	rcall	.+120    	; 0xad2 <__ultoa_invert+0x9c>
 a5a:	67 0f       	add	r22, r23
 a5c:	78 1f       	adc	r23, r24
 a5e:	89 1f       	adc	r24, r25
 a60:	9a 1f       	adc	r25, r26
 a62:	a1 1d       	adc	r26, r1
 a64:	68 0f       	add	r22, r24
 a66:	79 1f       	adc	r23, r25
 a68:	8a 1f       	adc	r24, r26
 a6a:	91 1d       	adc	r25, r1
 a6c:	a1 1d       	adc	r26, r1
 a6e:	6a 0f       	add	r22, r26
 a70:	71 1d       	adc	r23, r1
 a72:	81 1d       	adc	r24, r1
 a74:	91 1d       	adc	r25, r1
 a76:	a1 1d       	adc	r26, r1
 a78:	20 d0       	rcall	.+64     	; 0xaba <__ultoa_invert+0x84>
 a7a:	09 f4       	brne	.+2      	; 0xa7e <__ultoa_invert+0x48>
 a7c:	68 94       	set
 a7e:	3f 91       	pop	r19
 a80:	2a e0       	ldi	r18, 0x0A	; 10
 a82:	26 9f       	mul	r18, r22
 a84:	11 24       	eor	r1, r1
 a86:	30 19       	sub	r19, r0
 a88:	30 5d       	subi	r19, 0xD0	; 208
 a8a:	31 93       	st	Z+, r19
 a8c:	de f6       	brtc	.-74     	; 0xa44 <__ultoa_invert+0xe>
 a8e:	cf 01       	movw	r24, r30
 a90:	08 95       	ret
 a92:	46 2f       	mov	r20, r22
 a94:	47 70       	andi	r20, 0x07	; 7
 a96:	40 5d       	subi	r20, 0xD0	; 208
 a98:	41 93       	st	Z+, r20
 a9a:	b3 e0       	ldi	r27, 0x03	; 3
 a9c:	0f d0       	rcall	.+30     	; 0xabc <__ultoa_invert+0x86>
 a9e:	c9 f7       	brne	.-14     	; 0xa92 <__ultoa_invert+0x5c>
 aa0:	f6 cf       	rjmp	.-20     	; 0xa8e <__ultoa_invert+0x58>
 aa2:	46 2f       	mov	r20, r22
 aa4:	4f 70       	andi	r20, 0x0F	; 15
 aa6:	40 5d       	subi	r20, 0xD0	; 208
 aa8:	4a 33       	cpi	r20, 0x3A	; 58
 aaa:	18 f0       	brcs	.+6      	; 0xab2 <__ultoa_invert+0x7c>
 aac:	49 5d       	subi	r20, 0xD9	; 217
 aae:	31 fd       	sbrc	r19, 1
 ab0:	40 52       	subi	r20, 0x20	; 32
 ab2:	41 93       	st	Z+, r20
 ab4:	02 d0       	rcall	.+4      	; 0xaba <__ultoa_invert+0x84>
 ab6:	a9 f7       	brne	.-22     	; 0xaa2 <__ultoa_invert+0x6c>
 ab8:	ea cf       	rjmp	.-44     	; 0xa8e <__ultoa_invert+0x58>
 aba:	b4 e0       	ldi	r27, 0x04	; 4
 abc:	a6 95       	lsr	r26
 abe:	97 95       	ror	r25
 ac0:	87 95       	ror	r24
 ac2:	77 95       	ror	r23
 ac4:	67 95       	ror	r22
 ac6:	ba 95       	dec	r27
 ac8:	c9 f7       	brne	.-14     	; 0xabc <__ultoa_invert+0x86>
 aca:	00 97       	sbiw	r24, 0x00	; 0
 acc:	61 05       	cpc	r22, r1
 ace:	71 05       	cpc	r23, r1
 ad0:	08 95       	ret
 ad2:	9b 01       	movw	r18, r22
 ad4:	ac 01       	movw	r20, r24
 ad6:	0a 2e       	mov	r0, r26
 ad8:	06 94       	lsr	r0
 ada:	57 95       	ror	r21
 adc:	47 95       	ror	r20
 ade:	37 95       	ror	r19
 ae0:	27 95       	ror	r18
 ae2:	ba 95       	dec	r27
 ae4:	c9 f7       	brne	.-14     	; 0xad8 <__ultoa_invert+0xa2>
 ae6:	62 0f       	add	r22, r18
 ae8:	73 1f       	adc	r23, r19
 aea:	84 1f       	adc	r24, r20
 aec:	95 1f       	adc	r25, r21
 aee:	a0 1d       	adc	r26, r0
 af0:	08 95       	ret

00000af2 <__prologue_saves__>:
 af2:	2f 92       	push	r2
 af4:	3f 92       	push	r3
 af6:	4f 92       	push	r4
 af8:	5f 92       	push	r5
 afa:	6f 92       	push	r6
 afc:	7f 92       	push	r7
 afe:	8f 92       	push	r8
 b00:	9f 92       	push	r9
 b02:	af 92       	push	r10
 b04:	bf 92       	push	r11
 b06:	cf 92       	push	r12
 b08:	df 92       	push	r13
 b0a:	ef 92       	push	r14
 b0c:	ff 92       	push	r15
 b0e:	0f 93       	push	r16
 b10:	1f 93       	push	r17
 b12:	cf 93       	push	r28
 b14:	df 93       	push	r29
 b16:	cd b7       	in	r28, 0x3d	; 61
 b18:	de b7       	in	r29, 0x3e	; 62
 b1a:	ca 1b       	sub	r28, r26
 b1c:	db 0b       	sbc	r29, r27
 b1e:	0f b6       	in	r0, 0x3f	; 63
 b20:	f8 94       	cli
 b22:	de bf       	out	0x3e, r29	; 62
 b24:	0f be       	out	0x3f, r0	; 63
 b26:	cd bf       	out	0x3d, r28	; 61
 b28:	09 94       	ijmp

00000b2a <__epilogue_restores__>:
 b2a:	2a 88       	ldd	r2, Y+18	; 0x12
 b2c:	39 88       	ldd	r3, Y+17	; 0x11
 b2e:	48 88       	ldd	r4, Y+16	; 0x10
 b30:	5f 84       	ldd	r5, Y+15	; 0x0f
 b32:	6e 84       	ldd	r6, Y+14	; 0x0e
 b34:	7d 84       	ldd	r7, Y+13	; 0x0d
 b36:	8c 84       	ldd	r8, Y+12	; 0x0c
 b38:	9b 84       	ldd	r9, Y+11	; 0x0b
 b3a:	aa 84       	ldd	r10, Y+10	; 0x0a
 b3c:	b9 84       	ldd	r11, Y+9	; 0x09
 b3e:	c8 84       	ldd	r12, Y+8	; 0x08
 b40:	df 80       	ldd	r13, Y+7	; 0x07
 b42:	ee 80       	ldd	r14, Y+6	; 0x06
 b44:	fd 80       	ldd	r15, Y+5	; 0x05
 b46:	0c 81       	ldd	r16, Y+4	; 0x04
 b48:	1b 81       	ldd	r17, Y+3	; 0x03
 b4a:	aa 81       	ldd	r26, Y+2	; 0x02
 b4c:	b9 81       	ldd	r27, Y+1	; 0x01
 b4e:	ce 0f       	add	r28, r30
 b50:	d1 1d       	adc	r29, r1
 b52:	0f b6       	in	r0, 0x3f	; 63
 b54:	f8 94       	cli
 b56:	de bf       	out	0x3e, r29	; 62
 b58:	0f be       	out	0x3f, r0	; 63
 b5a:	cd bf       	out	0x3d, r28	; 61
 b5c:	ed 01       	movw	r28, r26
 b5e:	08 95       	ret

00000b60 <_exit>:
 b60:	f8 94       	cli

00000b62 <__stop_program>:
 b62:	ff cf       	rjmp	.-2      	; 0xb62 <__stop_program>
